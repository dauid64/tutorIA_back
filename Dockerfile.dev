# First stage: Rust Builder
FROM rust:1.77 as builder

# Create a workspace
WORKDIR /usr/src/app

# Copy the manifests
COPY ./Cargo.toml ./
COPY ./Cargo.lock ./

# Copy the sqlx-data.json file generated by `sqlx prepare`
COPY ./.sqlx ./.sqlx

COPY ./tutorIA_API ./tutorIA_API
COPY ./tutorIA_agent ./tutorIA_agent

# Build dependencies only to cache them
RUN mkdir -p ./target/debug \
    && touch ./tutorIA_API/src/main.rs \
    && cargo build --bin tutorIA_API

# Build the actual application
COPY ./tutorIA_API/src ./tutorIA_API/src
RUN touch ./tutorIA_API/src/main.rs \
    && cargo build --bin tutorIA_API

# Second stage: Runtime
FROM debian:bookworm

# Install needed packages (e.g., for SSL)
RUN apt-get update \
    && apt-get install -y --no-install-recommends ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/app

# Copy the binary from the builder stage
COPY --from=builder /usr/src/app/target/debug/tutorIA_API /usr/local/bin/tutorIA_API

COPY migrations /usr/app/migrations
COPY ./static  /usr/app/static

# Set permissions to execute
RUN chmod +x /usr/local/bin/tutorIA_API

# Run the binary
CMD ["tutorIA_API"]
