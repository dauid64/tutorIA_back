# First stage: Rust Builder
FROM rust:1.77 as builder

# Create a workspace
WORKDIR /usr/src/app

# Copy the manifests
COPY ./Cargo.toml ./
COPY ./Cargo.lock ./

# Copy the sqlx-data.json file generated by `sqlx prepare`
COPY ./.sqlx ./.sqlx

COPY ./tutoria_api ./tutoria_api
COPY ./tutoria_agent ./tutoria_agent

# Build dependencies only to cache them
RUN mkdir -p ./target/release \
    && touch ./tutoria_api/src/main.rs \
    && cargo build --release --bin tutoria_api

# Build the actual application
COPY ./tutoria_api/src ./tutoria_api/src
RUN touch ./tutoria_api/src/main.rs \
    && cargo build --release --bin tutoria_api

# Second stage: Runtime
FROM debian:bookworm

# Install needed packages (e.g., for SSL)
RUN apt-get update \
    && apt-get install -y --no-install-recommends ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /usr/app

# Copy the binary from the builder stage
COPY --from=builder /usr/src/app/target/release/tutoria_api /usr/src/app/tutoria_api

COPY migrations /usr/app/migrations
COPY ./static  /usr/app/static
COPY ./tutorIA /usr/app/tutorIA

# Set permissions to execute
RUN chmod +x /usr/src/app/tutoria_api

# Run the binary
CMD ["tutoria_api"]
